---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: dorisinitializers.al-assad.github.io
spec:
  group: al-assad.github.io
  names:
    kind: DorisInitializer
    listKind: DorisInitializerList
    plural: dorisinitializers
    singular: dorisinitializer
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: DorisInitializer is the Schema for the doris initializers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DorisInitializerSpec defines the desired state of doris initializer
              Job
            properties:
              adminPassword:
                description: Default Doris root user password
                type: string
              claims:
                description: "Claims lists the names of resources, defined in spec.resourceClaims,
                  that are used by this container. \n This is an alpha field and requires
                  enabling the DynamicResourceAllocation feature gate. \n This field
                  is immutable. It can only be set for containers."
                items:
                  description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                  properties:
                    name:
                      description: Name must match the name of one entry in pod.spec.resourceClaims
                        of the Pod where this field is used. It makes that resource
                        available inside a container.
                      type: string
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              cluster:
                description: Reference of the target DorisCluster
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                type: object
              image:
                description: Image tags of the python-sql executor container
                type: string
              imagePullPolicy:
                description: ImagePullPolicy of Doris cluster Pods
                type: string
              imagePullSecrets:
                description: ImagePullSecrets is an optional list of references to
                  secrets in the same namespace to use for pulling any of the images.
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              initSqlScript:
                description: Doris initialize sqls
                type: string
              limits:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: 'Limits describes the maximum amount of compute resources
                  allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                type: object
              requests:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: 'Requests describes the minimum amount of compute resources
                  required. If Requests is omitted for a container, it defaults to
                  Limits if that is explicitly specified, otherwise to an implementation-defined
                  value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                type: object
              rootPassword:
                description: Default Doris root user password
                type: string
              serviceAccount:
                description: Specify a Service Account
                type: string
              tolerations:
                description: Tolerations of the Doris initializer Pod
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
            required:
            - cluster
            - image
            type: object
          status:
            description: DorisInitializerStatus defines the observed state of DorisInitializer
            nullable: true
            properties:
              active:
                description: The number of pending and running pods.
                format: int32
                type: integer
              completedIndexes:
                description: completedIndexes holds the completed indexes when .spec.completionMode
                  = "Indexed" in a text format. The indexes are represented as decimal
                  integers separated by commas. The numbers are listed in increasing
                  order. Three or more consecutive numbers are compressed and represented
                  by the first and last element of the series, separated by a hyphen.
                  For example, if the completed indexes are 1, 3, 4, 5 and 7, they
                  are represented as "1,3-5,7".
                type: string
              completionTime:
                description: Represents time when the job was completed. It is not
                  guaranteed to be set in happens-before order across separate operations.
                  It is represented in RFC3339 form and is in UTC. The completion
                  time is only set when the job finishes successfully.
                format: date-time
                type: string
              conditions:
                description: 'The latest available observations of an object''s current
                  state. When a Job fails, one of the conditions will have type "Failed"
                  and status true. When a Job is suspended, one of the conditions
                  will have type "Suspended" and status true; when the Job is resumed,
                  the status of this condition will become false. When a Job is completed,
                  one of the conditions will have type "Complete" and status true.
                  More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/'
                items:
                  description: JobCondition describes current state of a job.
                  properties:
                    lastProbeTime:
                      description: Last time the condition was checked.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of job condition, Complete or Failed.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              failed:
                description: The number of pods which reached phase Failed.
                format: int32
                type: integer
              jobRef:
                description: ResourceRef contains the k8s resource ref info.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                type: object
              lastTransitionTime:
                description: Last time the condition transit from one Phase to another.
                format: date-time
                type: string
              message:
                type: string
              phase:
                type: string
              ready:
                description: "The number of pods which have a Ready condition. \n
                  This field is beta-level. The job controller populates the field
                  when the feature gate JobReadyPods is enabled (enabled by default)."
                format: int32
                type: integer
              reason:
                type: string
              startTime:
                description: Represents time when the job controller started processing
                  a job. When a Job is created in the suspended state, this field
                  is not set until the first time it is resumed. This field is reset
                  every time a Job is resumed from suspension. It is represented in
                  RFC3339 form and is in UTC.
                format: date-time
                type: string
              succeeded:
                description: The number of pods which reached phase Succeeded.
                format: int32
                type: integer
              uncountedTerminatedPods:
                description: "uncountedTerminatedPods holds the UIDs of Pods that
                  have terminated but the job controller hasn't yet accounted for
                  in the status counters. \n The job controller creates pods with
                  a finalizer. When a pod terminates (succeeded or failed), the controller
                  does three steps to account for it in the job status: \n 1. Add
                  the pod UID to the arrays in this field. 2. Remove the pod finalizer.
                  3. Remove the pod UID from the arrays while increasing the corresponding
                  counter. \n Old jobs might not be tracked using this field, in which
                  case the field remains null."
                properties:
                  failed:
                    description: failed holds UIDs of failed Pods.
                    items:
                      description: UID is a type that holds unique ID values, including
                        UUIDs.  Because we don't ONLY use UUIDs, this is an alias
                        to string.  Being a type captures intent and helps make sure
                        that UIDs and names do not get conflated.
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  succeeded:
                    description: succeeded holds UIDs of succeeded Pods.
                    items:
                      description: UID is a type that holds unique ID values, including
                        UUIDs.  Because we don't ONLY use UUIDs, this is an alias
                        to string.  Being a type captures intent and helps make sure
                        that UIDs and names do not get conflated.
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
